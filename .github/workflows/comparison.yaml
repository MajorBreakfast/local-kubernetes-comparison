name: Kubernetes Comparison

on:
  push:

jobs:
  kind:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Create cluster
        uses: helm/kind-action@v1.4.0
        with:
          config: ./6-usage-in-ci/kind-config.yaml

      - name: 🚀 Install manifests
        run: kubectl apply -f ./6-usage-in-ci/podinfo-nodeport.yaml

      - name: Wait for rollout
        timeout-minutes: 1
        run: while ! curl localhost -s -o /dev/null -w "%{http_code}\n"; do sleep 1; done

      - name: 🔍 Verify
        run: curl -fsSL localhost

  k3d:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Create cluster
        uses: AbsaOSS/k3d-action@v2
        with:
          cluster-name: test-cluster
          args: --port "80:80@server:0:direct" --no-lb --k3s-arg "--disable=traefik@server:*"

      - name: 🚀 Install manifests
        run: kubectl apply -f ./6-usage-in-ci/podinfo-loadbalancer.yaml

      - name: Wait for rollout
        timeout-minutes: 1
        run: while ! curl localhost -s -o /dev/null -w "%{http_code}\n"; do sleep 1; done

      - name: 🔍 Verify
        run: curl -fsSL localhost

  minikube:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Create cluster
        uses: medyagh/setup-minikube@latest
        with:
          start-args: --ports "80:30080"

      - name: 🚀 Install manifests
        run: kubectl apply -f ./6-usage-in-ci/podinfo-nodeport.yaml

      - name: Wait for rollout
        timeout-minutes: 1
        run: while ! curl localhost -s -o /dev/null -w "%{http_code}\n"; do sleep 1; done

      - name: 🔍 Verify
        run: curl -fsSL localhost

  microk8s:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Create cluster
        uses: balchua/microk8s-actions@v0.3.0
        with:
          channel: latest/stable

      - name: 🚀 Install manifests
        run: kubectl apply -f ./6-usage-in-ci/podinfo-loadbalancer.yaml

      - name: Wait for rollout
        timeout-minutes: 1
        run: while ! curl localhost:30080 -s -o /dev/null -w "%{http_code}\n"; kubectl get svc; do sleep 1; done

      - name: 🔍 Verify
        run: curl -fsSL localhost:30080
